{"version":3,"sources":["src/helpers/validate-ip.js","src/helpers/add-tile-layer.js","src/helpers/index.js","src/index.js"],"names":["validateIp","ip","test","alert","addTileLayer","map","L","tileLayer","maxZoom","attribution","addTo","ipInput","document","querySelector","btn","ipInfo","locationInfo","timezoneInfo","ispInfo","addEventListener","getData","handleKey","mapArea","setView","API","customIcon","icon","iconUrl","iconSize","shadowAnchor","popupAnchor","marker","value","fetch","then","response","json","setInfo","event","key","mapData","console","log","innerText","location","country","region","timezone","isp","removeLayer","lat","lng"],"mappings":";AAMA,aANO,SAASA,EAAWC,GACvB,QAAI,mKAAmKC,KAAKD,KAG5KE,MAAM,0CACC,GACX,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA;;ACDA,aALO,SAASC,EAAaC,GACzBC,EAAEC,UAAU,iDAAkD,CAC9DC,QAAS,GACTC,YAAa,8EACdC,MAAML,GACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA;;ACJA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,eAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,gBAAA,OAAA,eAAA,QAAA,aAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,cADA,IAAA,EAAA,QAAA,iBACA,EAAA,QAAA;;;;ACqDA,aArDA,IAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,gCAA+C,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAE/C,IAAMM,EAAUC,SAASC,cAAc,sBACjCC,EAAMF,SAASC,cAAc,UAE7BE,EAASH,SAASC,cAAc,OAChCG,EAAeJ,SAASC,cAAc,aACtCI,EAAeL,SAASC,cAAc,aACtCK,EAAUN,SAASC,cAAc,QAEvCC,EAAIK,iBAAiB,QAASC,GAC9BT,EAAQQ,iBAAiB,UAAWE,GAEpC,IAAMC,EAAUV,SAASC,cAAc,QACjCR,EAAMC,EAAED,IAAI,OAAOkB,QAAQ,CAAC,QAAS,KAAO,IAE5CC,EAAyB,oCAC/B,EAAApB,EAAY,cAACC,GACb,IAAIoB,EAAanB,EAAEoB,KAAK,CACpBC,QAASD,EAAI,QACbE,SAAc,CAAC,GAAI,IACnBC,aAAc,CAAC,EAAG,IAClBC,YAAc,EAAE,GAAI,MAEpBC,EAASzB,EAAEyB,OAAO,CAAC,MAAO,KAAO,CAACL,KAAKD,IAAaf,MAAML,GAE9D,SAASe,KAEF,EAAApB,EAAU,YAACW,EAAQqB,QAClBC,MAA0DT,oDAAAA,OAAAA,EAAiBb,eAAAA,OAAAA,EAAQqB,QAClFE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAKG,GAKd,SAAShB,EAAUiB,GACE,UAAdA,EAAMC,KACLnB,IAIR,SAASiB,EAAQG,GACbC,QAAQC,IAAIF,GACZzB,EAAO4B,UAAYH,EAAQvC,GAC3Be,EAAa2B,UAAYH,EAAQI,SAASC,QAAU,IAAML,EAAQI,SAASE,OAC3E7B,EAAa0B,UAAYH,EAAQI,SAASG,SAC1C7B,EAAQyB,UAAYH,EAAQQ,IAE5B3C,EAAI4C,YAAYlB,GAChB1B,EAAIkB,QAAQ,CAACiB,EAAQI,SAASM,IAAKV,EAAQI,SAASO,MACpDpB,EAASzB,EAAEyB,OAAO,CAACS,EAAQI,SAASM,IAAKV,EAAQI,SAASO,KAAM,CAACzB,KAAKD,IAAaf,MAAML","file":"src.61e9f261.js","sourceRoot":"..","sourcesContent":["export function validateIp(ip) {\r\n    if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip)) {  \r\n        return (true);  \r\n    } \r\n    alert(\"You have to enter a valid IP address.\");\r\n    return false;\r\n}","export function addTileLayer(map) {\r\n    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    maxZoom: 19,\r\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n}).addTo(map);\r\n}","export {validateIp} from './validate-ip';\r\nexport {addTileLayer} from './add-tile-layer';","\r\nimport {addTileLayer, validateIp} from \"./helpers\";\r\nimport icon from '../images/icon-location.svg';\r\n\r\nconst ipInput = document.querySelector(\".search-bar__input\");\r\nconst btn = document.querySelector(\"button\");\r\n\r\nconst ipInfo = document.querySelector('#ip');\r\nconst locationInfo = document.querySelector('#location');\r\nconst timezoneInfo = document.querySelector('#timezone');\r\nconst ispInfo = document.querySelector('#isp');\r\n\r\nbtn.addEventListener('click', getData);\r\nipInput.addEventListener('keydown', handleKey);\r\n\r\nconst mapArea = document.querySelector('.map');\r\nconst map = L.map('map').setView([51.505, -0.09], 13);\r\n\r\nconst API = process.env.API_KEY;\r\naddTileLayer(map);\r\nvar customIcon = L.icon({\r\n    iconUrl: icon,\r\n    iconSize:     [30, 40], // size of the icon\r\n    shadowAnchor: [4, 62],  // the same for the shadow\r\n    popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\r\n});\r\nlet marker = L.marker([51.5, -0.09], {icon:customIcon}).addTo(map);\r\n\r\nfunction getData() {\r\n    // check data\r\n    if(validateIp(ipInput.value)) {\r\n        fetch(`https://geo.ipify.org/api/v2/country,city?apiKey=${API}&ipAddress=${ipInput.value}`)\r\n        .then(response => response.json())\r\n        .then(setInfo);\r\n    }\r\n\r\n}\r\n\r\nfunction handleKey(event) {\r\n    if(event.key === 'Enter') {\r\n        getData();\r\n    }\r\n}\r\n\r\nfunction setInfo(mapData) {\r\n    console.log(mapData);\r\n    ipInfo.innerText = mapData.ip;\r\n    locationInfo.innerText = mapData.location.country + ' ' + mapData.location.region;\r\n    timezoneInfo.innerText = mapData.location.timezone;\r\n    ispInfo.innerText = mapData.isp;\r\n\r\n    map.removeLayer(marker);\r\n    map.setView([mapData.location.lat, mapData.location.lng]);\r\n    marker = L.marker([mapData.location.lat, mapData.location.lng], {icon:customIcon}).addTo(map);\r\n}"]}